# sqlite 数据类型

sqlite3中的数据类型
大多数的数据库引擎（到现在据我们所知的除了sqlite的每个sql数据库引擎）都使用静态的、刚性的类型，使用静态类型，数据的类型就由它的容器决定，这个容器是这个指被存放的特定列。
Sqlite使用一个更一般的动态类型系统，sqlite中，值的数据类型跟值本身相关，而不是与它的容器相关。Sqlite的动态类型系统和其他数据库的更为一般的静态类型系统相兼容，但同时，sqlite中的动态类型允许它能做到一些传统刚性类型数据库所不可能做到的事。
 
1．  存储类和数据类型
每个存放在sqlite数据库中（或者由这个数据库引擎操作）的值都有下面中的一个存储类：

	l  NULL，值是NULL
	l  INTEGER，值是有符号整形，根据值的大小以1,2,3,4,6或8字节存放
	l  REAL，值是浮点型值，以8字节IEEE浮点数存放
	l  TEXT，值是文本字符串，使用数据库编码（UTF-8，UTF-16BE或者UTF-16LE）存放
	l  BLOB，只是一个数据块，完全按照输入存放（即没有准换）
从上可以看出存储类比数据类型更一般化。比如INTEGER存储类，包括6中不同长度的不同整形数据类型，这在磁盘上造成了差异。但是只要INTEGER值被从磁盘读出进入到内存进行处理，它们被转换成最一般的数据类型（8-字节有符号整形）。
Sqlite v3数据库中的任何列，除了整形主键列，可以用于存储任何一个存储列的值。sql语句中的中所有值，不管它们是嵌入在sql文本中或者是作为参数绑定到一个预编译的sql语句，它们的存储类型都是未定的。在下面描述的情况中，数据库引擎会在查询执行过程中在数值（numeric）存储类型（INTEGER和REAL）和TEXT之间转换值。
1.1布尔类型
Sqlite没有单独的布尔存储类型，它使用INTEGER作为存储类型，0为false，1为true
 
1.2 Date和Time Datatype
Sqlite没有另外为存储日期和时间设定一个存储类集，内置的sqlite日期和时间函数能够将日期和时间以TEXT，REAL或INTEGER形式存放

	l  TEXT 作为IS08601字符串（"YYYY-MM-DD HH:MM:SS.SSS"）
	l  REAL 从格林威治时间11月24日，4174 B.C中午以来的天数
	l  INTEGER 从 1970-01-01 00:00:00 UTC以来的秒数
程序可以任意选择这几个存储类型去存储日期和时间，并且能够使用内置的日期和时间函数在这些格式间自由转换
 
2.0 类型近似
 
为了使sqlite和其他数据库间的兼容性最大化，sqlite支持列上“类型近似”的观点，列的类型近似指的是存储在列上数据的推荐类型。这里必须记住一点，这个类型是被推荐，而不是必须的。任何列仍然能存储任意类型的数据。只是一些列，给予选择的话，将会相比于其他的一些类型优选选择一些存储类型，这个列优先选择的存储类型被称为它的“近似”。
每个sqlite3数据库中的列都被赋予下面类型近似中的一种：

	l  TEXT
	l  NUMERIC
	l  INTEGER
	l  REAL
	l  NONE
具有TEXT近似的列可以用NULL，TEXT或者BLOB类型存储数据。如果数值数据被插入到具有TEXT近似的列，在被存储前被转换为文本形式
一个有NUMERIC近似的列可以使用1中的所有5中存储类来存储数据。当文本数据被存放到NUMERIC近似的列中，这个文本的存储类被转换到INTEGER或REAL（根据优先级顺序），如果这个转换是无损的话。对于TEXT和REAL存储类间的转换，如果数据的前15位的被保留的话sqlite就认为这个转换是无损的、可反转的。如果TEXT到INTEGER或REAL的转换不可避免的会造成损失，那么数据将使用TEXT存储类存储。不会企图去转换NULL或BLOB值。
一个字符串可能看起来像浮点数据，有小数点或指数符号，但是只要这个数据可以使用整形存放，NUMERIC近似就会将它转换到整形。比如，字符串 '3.0e+5'存放到一个具有NUMERIC近似的列中，被存为300000，而不是浮点型值300000.0。
具有INTEGER近似的列和具有NUMERIC近似的列表现相同。它们之间的差别仅处于转换描述上。
具有REAL近似的列和具有NUMERIC近似的列一样，除了它将整形数据转换成浮点型形式。
具有NONE近似的列不会优先选择一个存储列，也不会强制将数据从一个存储类转换到另外一个类。
 
2.1 列近似的决定因素
列的近似由这个列的声明类型所决定，根据下面的顺序的规则：
<1> 如果声明类型包含”INT”字符串，那么这个列被赋予INTEGER近似
<2> 如果这个列的声明类型包含”CHAR”，”CLOB”，或者”TEXT”中的任意一个，那么这个列就有了TEXT近似。注意类型VARCHAR包含了”CHAR”字符串，那么也就被赋予了TEXT近似
<3> 如果列的声明类型中包含了字符串”BLOB”或者没有为其声明类型，这个列被赋予NONE近似
<4> 其他的情况，列被赋予NUMERIC近似
上面规则额顺序对于决定列的近似很重要。一个列的声明类型为”CHARINT”的话同时会匹配规则<1>和<2>，但是第一个规则占有优先级所以这个列的近似将是INTEGER。
 



refs:  

[sqlite3中的数据类型](http://www.cnblogs.com/kfqcome/archive/2011/06/27/2137000.html)  